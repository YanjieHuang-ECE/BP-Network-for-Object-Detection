%BP 网络实现目标识别的具体实现
%from 《神经网络在目标识别中的应用》 by 沈丽珺
% 通常目标的信息量是很大的，处理过程也较复杂，我们这里选取一个一维的向量作为输入，
% 通过简单的模型反映目标识别的基本过程。我们用 Matlab 神经网络工具箱函数实
% 现了 BP 神经网络对函数的逼近。训练成功后，用未经训练
% 的数据检验了网络的逼近能力，发现测试样本数据和仿真数
% 据的吻合度很高。 
% 以下是程序主要说明: 
%在训练神经网络前对训练数据进行了归一化处理 
[Pn,minp,maxp,Tn,mint,maxt]=premnmx(P,T); 
% 对 BP 神经网络进行训练 
[net,tr]=train(net,Pn,Tn); 
% 对 BP 神经网络进行仿真分析 
Yn=sim(net,Pn); 
% 恢复被归一化的数据 
[Y]=postmnmx(Yn,mint,maxt); 
%训练成功后对用未经训练的数据检验了网络的仿真效
果 
%对测试数据进行归一化处理： 
p1n=tramnmx(p1,minp,maxp); 
%tramnmx：利用预先计算的最大和最小值对数据进行
变换 
%对变换后的测试数据进行仿真 
yn=sim(net,p1n); 
% 将仿真结果还原成原始数据 
[y]=postmnmx(yn,mint,maxt); 

%实验数据
% 输入矢量 P（1×41）的各值： 
% P: -1 -0.95 -0.9 -0.85 -0.8 -0.75
%  -0.7 -0.65 -0.6 -0.55 -0.5 -0.45 -0.4
%  -0.35 -0.3 -0.25 -0.2 -0.15 -0.1 -0.05
%  0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45
%  0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95
%  1
% 目标矢量 T（1×41）的各值： 
% T： 3 3.1622 3.0148 2.5724 1.8781
%  1 0.024006 -0.95434 -1.8393 -2.5442 -3
%  -3.1622 -3.0148 -2.5724 -1.8781 -1
%  -0.024006 0.95434 1.8393 2.5442 3
%  3.1622 3.0148 2.5724 1.8781 1
%  0.024006 -0.95434 -1.8393 -2.5442 -3
%  -3.1622 -3.0148 -2.5724 -1.8781 -1
%  -0.024006 0.95434 1.8393 2.5442 3 
% 均方误差 E（1×41）的各值： 
% E: -0.0097051 -0.00071337 -0.0037043
%  0.0016295 0.0024561 -0.0012436
%  0.00084458 0.002832 -3.2678e-005
%  -7.5671e-005 0.0018745 0.00045565
%  -0.0012038 0.00058485 0.0015911
%  -0.00089008 -0.00052878 0.0015257
%  -0.0005674 -0.0013465 0.00092992
%  0.00037615 -0.0014731 -0.00037799
%  0.00031312 -0.00077649 4.1081e-005
%  0.00030528 -0.0003716 0.0008447
%  0.00061831 -0.00046098 0.0018418
%  0.0034584 0.00034691 -0.00070507
%  0.00093937 -0.0025481 -0.00056224
%  0.01616 0.0070748 
% 结论：均方误差极小，说明函数逼近程度较高。 